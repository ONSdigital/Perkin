[collect]
SDX_COLLECT_VARS: RABBITMQ_VARS $RABBITMQ2_VARS SDX_DECRYPT_URL SDX_VALIDATE_URL SDX_RESPONSES_URL RECEIPT_URL RECEIPT_PASS
SDX_COLLECT_VARS: SDX_COLLECT_VARS RABBIT_SURVEY_QUEUE SDX_COLLECT_SECRET
SDX_COLLECT_START_CMD: APP_MAIN_START_CMD
SDX_COLLECT_TMP_DIR: 'tmp'

[logging]
LOGGING_LEVEL: DEBUG
LOGGING_FORMAT: "%(asctime)s.%(msecs)06dZ|%(levelname)s: sdx-collect: %(message)s"

[Default URLs]
SDX_RESPONSES_URL: http://sdx-store:5000/responses
SDX_DECRYPT_URL: http://sdx-decrypt:5000/decrypt
SDX_VALIDATE_URL: http://sdx-validate:5000/validate

[RRM Queue]
RABBIT_QUEUE: survey
RABBIT_QUARANTINE_QUEUE: survey_quarantine
RABBIT_EXCHANGE: message
RABBIT_RRM_RECEIPT_QUEUE: rrm_receipt

[Secret]
SDX_COLLECT_SECRET: SDX_COLLECT_SECRET
if SDX_COLLECT_SECRET is not None:
    SDX_COLLECT_SECRET = SDX_COLLECT_SECRET.encode("ascii")

[Rabbit URLs]

RABBITMQ_HOST: rabbit
RABBITMQ_PORT: 5672
RABBITMQ_DEFAULT_USER: rabbit
RABBITMQ_DEFAULT_PASS: rabbit
RABBITMQ_DEFAULT_VHOST: %2f
RABBITMQ_HOST2: rabbit
RABBITMQ_PORT2: 5672

RABBIT_URL = 'amqp://{user}:{password}@{hostname}:{port}/{vhost}'.format(
    hostname=os.getenv('RABBITMQ_HOST', 'rabbit'),
    port=os.getenv('RABBITMQ_PORT', 5672),
    user=os.getenv('RABBITMQ_DEFAULT_USER', 'rabbit'),
    password=os.getenv('RABBITMQ_DEFAULT_PASS', 'rabbit'),
    vhost=os.getenv('RABBITMQ_DEFAULT_VHOST', '%2f')
)

RABBIT_URL2 = 'amqp://{user}:{password}@{hostname}:{port}/{vhost}'.format(
    hostname=os.getenv('RABBITMQ_HOST2', 'rabbit'),
    port=os.getenv('RABBITMQ_PORT2', 5672),
    user=os.getenv('RABBITMQ_DEFAULT_USER', 'rabbit'),
    password=os.getenv('RABBITMQ_DEFAULT_PASS', 'rabbit'),
    vhost=os.getenv('RABBITMQ_DEFAULT_VHOST', '%2f')
)

RABBIT_URLS: RABBIT_URL, RABBIT_URL2

RABBIT_SURVEY_QUEUE: sdx-survey-notification-durable

